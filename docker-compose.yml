services:
  # core-api:
  #   build:
  #     dockerfile: Dockerfile
  #     context: .
  #     # Only will build development stage from our dockerfile
  #     target: development
  #   volumes:
  #     - .:/usr/src/app
  #   env_file:
  #   - .env.docker
  #   # Run a command against the development stage of the image
  #   command: npm run start:docker
  #   ports:
  #     - 3000:3000

  redis-cache:
    image: redis
    ports:
      - 6379:6379
    volumes:
      - redis-volume:/data

 postgresdb:
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5432:5432'
    volumes: 
      - postgres-volume:/var/lib/postgresql/data

 cockroachdb:
   image: cockroachdb/cockroach:v22.2.8
   ports:
     - "26257:26257"
     - "8080:8080"
   command: start-single-node --insecure --logtostderr
  #  entrypoint: ./cockroach sql -e 'CREATE DATABASE IF NTO EXISTS test' --insecure
   volumes:
     - cockroach-volume:/cockroach/cockroach-data

 mongodb:
    image: mongo:5.0
    ports:
      - 27017:27017
    volumes:
      - mongodb-volume:/data/db
    # environment:
      # - MONGO_INITDB_ROOT_USERNAME=root
      # - MONGO_INITDB_ROOT_PASSWORD=rootpass

volumes:
  redis-volume:
  cockroach-volume:
  mongodb-volume:
  postgres-volume:  